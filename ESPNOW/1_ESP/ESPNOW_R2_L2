#include <WiFi.h>
#include <Bluepad32.h>

// Definisi Pin Motor
#define RPWM_PIN1 18
#define LPWM_PIN1 19
#define RPWM_PIN2 21
#define LPWM_PIN2 22
#define RPWM_PIN3 23
#define LPWM_PIN3 25
#define RPWM_PIN4 26
#define LPWM_PIN4 27

// Definisi Channel LEDC untuk PWM
#define LEDC_CHANNEL_1A  0  
#define LEDC_CHANNEL_1B  1  
#define LEDC_CHANNEL_2A  2  
#define LEDC_CHANNEL_2B  3  
#define LEDC_CHANNEL_3A  4  
#define LEDC_CHANNEL_3B  5  
#define LEDC_CHANNEL_4A  6  
#define LEDC_CHANNEL_4B  7  

#define LEDC_FREQ        5000  
#define LEDC_RESOLUTION  8

GamepadPtr myGamepad = nullptr;

// Callback saat gamepad terhubung
void onGamepadConnected(GamepadPtr gp) {
    myGamepad = gp;
    Serial.println("Gamepad Connected!");
}

// Callback saat gamepad terputus
void onGamepadDisconnected(GamepadPtr gp) {
    myGamepad = nullptr;
    Serial.println("Gamepad Disconnected!");
}

void setMotorSpeed(int channelA, int channelB, int speed) {
    int pwmValue = abs(speed);
    bool forward = (speed > 0);
    ledcWrite(channelA, forward ? pwmValue : 0);
    ledcWrite(channelB, forward ? 0 : pwmValue);
}

void setup() {
    Serial.begin(115200);

    // Inisialisasi PWM
    for (int i = 0; i < 8; i++) {
        ledcSetup(i, LEDC_FREQ, LEDC_RESOLUTION);
    }

    // Attach GPIO ke channel LEDC
    ledcAttachPin(RPWM_PIN1, LEDC_CHANNEL_1A);
    ledcAttachPin(LPWM_PIN1, LEDC_CHANNEL_1B);
    ledcAttachPin(RPWM_PIN2, LEDC_CHANNEL_2A);
    ledcAttachPin(LPWM_PIN2, LEDC_CHANNEL_2B);
    ledcAttachPin(RPWM_PIN3, LEDC_CHANNEL_3A);
    ledcAttachPin(LPWM_PIN3, LEDC_CHANNEL_3B);
    ledcAttachPin(RPWM_PIN4, LEDC_CHANNEL_4A);
    ledcAttachPin(LPWM_PIN4, LEDC_CHANNEL_4B);

    // Inisialisasi Bluetooth Gamepad dengan kedua callback
    BP32.setup(onGamepadConnected, onGamepadDisconnected);
}

void loop() {
    BP32.update();

    if (myGamepad && myGamepad->isConnected()) {
        int xLeft = -myGamepad->axisX();
        int yLeft = myGamepad->axisY();
        int z = myGamepad->axisRX();
        static int speedFactor = 80;  // Nilai kecepatan default

        // Cek tombol R2 dan L2 dengan menggunakan bitmask pada myGamepad->buttons()
        // (Misal: R2 = bit 9, L2 = bit 8; sesuaikan dengan dokumentasi Bluepad32 jika berbeda)
        if (myGamepad->buttons() & (1 << 9)) { // Tombol R2
            speedFactor = min(speedFactor + 10, 255);
            Serial.printf("Speed Up: %d\n", speedFactor);
        }
        if (myGamepad->buttons() & (1 << 8)) { // Tombol L2
            speedFactor = max(speedFactor - 10, 0);
            Serial.printf("Speed Down: %d\n", speedFactor);
        }

        // Hitung kecepatan motor
        int m1 = constrain((xLeft + yLeft + z) * speedFactor / 100, -255, 255);
        int m2 = constrain((xLeft - yLeft + z) * speedFactor / 100, -255, 255);
        int m3 = constrain((-xLeft + yLeft + z) * speedFactor / 100, -255, 255);
        int m4 = constrain((-xLeft - yLeft + z) * speedFactor / 100, -255, 255);

        // Set motor berdasarkan nilai yang dihitung
        setMotorSpeed(LEDC_CHANNEL_1A, LEDC_CHANNEL_1B, m1);
        setMotorSpeed(LEDC_CHANNEL_2A, LEDC_CHANNEL_2B, m2);
        setMotorSpeed(LEDC_CHANNEL_3A, LEDC_CHANNEL_3B, m3);
        setMotorSpeed(LEDC_CHANNEL_4A, LEDC_CHANNEL_4B, m4);

        Serial.printf("xLeft: %d, yLeft: %d, z: %d\n", xLeft, yLeft, z);
        Serial.printf("M1: %d, M2: %d, M3: %d, M4: %d\n", m1, m2, m3, m4);
    }
}
